name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} .

      - name: Docker Hub에 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker 이미지 푸시
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # build-and-push 작업 완료 후 실행
    steps:
      - name: SSH into EC2 and setup Docker
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            newgrp docker

      - name: SSH into EC2 and run Docker container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
            docker stop my-container || true
            docker rm my-container || true
            docker run -d --name my-container -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest